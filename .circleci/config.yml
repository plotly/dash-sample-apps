version: 2.0

jobs:
  test_black:
    docker:
      - image: circleci/python:3.6-stretch-node-browsers
    working_directory: ~/dash-sample-apps

    steps:
      - checkout
      - run:
          name: install black and flake8
          command: |
            sudo pip install black==19.10b0 flake8
      - run:
          name: run black
          command: |
            black . --check
      - run:
          name: run flake8
          command: |
            flake8 --select=E265,E711,W291
  deploy_to_playground:
    docker:
      - image: circleci/python:3.6-stretch
    working_directory: ~/dash-sample-apps
    steps:
      - checkout
      - run:
          name: Add plotly remote
          command: git remote add playground https://dash-playground.plotly.host/GIT/$CIRCLE_BRANCH
      - run:
          name: Create helper-script
          command: printf '#!/bin/bash\necho username=$PLAYGROUND_DEPLOY_USERNAME\necho password=$PLAYGROUND_DEPLOY_PASSWORD' >> /home/circleci/helper-script.sh
      - run:
          name: Set up git config
          command: |
            git config --global credential.helper "/bin/bash /home/circleci/helper-script.sh"
            git config --global user.email '<>' # Leave email blank
            git config --global user.name "Circle MonoRepo Automatic Deployer"
      - run:
          name: Install curl
          command: |
            sudo apt update
            sudo apt install -y -qq curl
      - run:
          name: Install dds-client
          command: |
            curl -sSL -o dds-client.tgz https://github.com/plotly/dds-client/releases/download/v0.3.0/dds-client_0.3.0_linux_x86_64.tgz
            mkdir $HOME/bin
            tar xzf dds-client.tgz -C $HOME/bin
            chmod +x $HOME/bin/dds-client
      - run:
          name: Deploy
          command: |
            APPS_MODIFIED=$(git diff origin/master origin/$CIRCLE_BRANCH --dirstat=files,1 apps/ | awk '{ split($2,a,"/"); if (length(a[2]) != 0) { print a[2]} } ' | sort -u)
            if [ -z "$APPS_MODIFIED" ]
            then
                  echo "No app change detected. Skipping the deploy.."
                  exit 0
            fi

            for APP in $APPS_MODIFIED
            do
              CREATE_APP=true DASH_ENTERPRISE_URL="$DASH_PLAYGROUND_ENTERPRISE_URL" DASH_ENTERPRISE_API_KEY="$DASH_PLAYGROUND_ENTERPRISE_API_KEY" PATH="$HOME/bin:$PATH" ./deploy "$APP"
            done
  deploy_to_gallery:
    docker:
      - image: circleci/python:3.6-stretch
    working_directory: ~/dash-sample-apps
    steps:
      - checkout
      - run:
          name: Add plotly remote
          command: git remote add gallery https://dash-playground.plotly.host/GIT/$CIRCLE_BRANCH
      - run:
          name: Create helper-script
          command: printf '#!/bin/bash\necho username=$GALLERY_DEPLOY_USERNAME\necho password=$GALLERY_DEPLOY_PASSWORD' >> /home/circleci/helper-script.sh
      - run:
          name: Set up git config
          command: |
            git config --global credential.helper "/bin/bash /home/circleci/helper-script.sh"
            git config --global user.email '<>' # Leave email blank
            git config --global user.name "Circle MonoRepo Automatic Deployer"
      - run:
          name: Install curl
          command: |
            sudo apt update
            sudo apt install -y -qq curl
      - run:
          name: Install dds-client
          command: |
            curl -sSL -o dds-client.tgz https://github.com/plotly/dds-client/releases/download/v0.3.0/dds-client_0.3.0_linux_x86_64.tgz
            mkdir $HOME/bin
            tar xzf dds-client.tgz -C $HOME/bin
            chmod +x $HOME/bin/dds-client
      - run:
          name: Deploy
          command: |
            APPS_MODIFIED=$(ls apps | grep dash- | sort -u)
            if [ -z "$APPS_MODIFIED" ]
            then
                  echo "No app change detected. Skipping the deploy.."
                  exit 0
            fi

            for APP in $APPS_MODIFIED
            do
              DASH_ENTERPRISE_URL="$DASH_GALLERY_ENTERPRISE_URL" DASH_ENTERPRISE_API_KEY="$DASH_GALLERY_ENTERPRISE_API_KEY" PATH="$HOME/bin:$PATH" ./deploy "$APP"
            done

workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test_black
      - deploy_to_playground:
          requires:
            - test_black
          filters:
            branches:
              ignore:
              - master
      - deploy_to_gallery:
          requires:
            - test_black
          filters:
            branches:
              only:
              - master
